/* 
 * Author: Jeremiah Bagula
 * Purpose:
 * 	This file is a file of mixins I have compiled from across the net and other
 * 	resources to create a mixin library*
 * 
 */

// Import the needed functions and other mixin types so that there is
// only one import when using this file
@import "_functions";
@import "_CSS3";
@import "_media";
@import "_general";

// The default prefixes
$default-prefixes: ("-webkit-","-moz-", "-o-", "-ms-", "");

// Add vender prefixes to the property
@mixin prefix($property, $value, $prefixes: $default-prefixes) {
    @each $prefix in $prefixes {
        #{$prefix}#{$property}: #{$value};
    }
}

// List of the Modernizr classes
$ClassList: (
    "applicationcache", "audio ", "backgroundsize", "borderimage", "borderradius", "boxshadow", "canvas",
    "canvastext", "cssanimations", "csscolumns", "cssgradients", "cssreflections", "csstransforms", "csstransforms3d",
    "csstransitions", "draganddrop", "flexbox", "fontface", "generatedcontent", "geolocation", "hashchange", "history",
    "hsla", "indexeddb", "inlinesvg", "js", "localstorage", "multiplebgs", "opacity", "postmessage", "rgba", "sessionstorage",
    "smil", "svg", "svgclippaths", "textshadow", "touch", "video", "webgl", "websockets", "websqldatabase", "webworkers"
);

// The mixin to generate the class pair if the
// class is a Modernzer feature class otherwise will just create the class
@mixin ModClass($class)
{
    @each $mclass in $ClassList
    {
      .#{$class}
      {
        @content;
      }
      @if $mclass == $class
      {
            .no-#{$class}
            {
              @content;
            }
        }
    }
}

// Opacity property for class, id, or element
@mixin Opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}



