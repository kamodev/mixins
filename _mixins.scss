/* 
 * Author: Jeremiah Bagula
 * Purpose:
 * 	This file is a file of mixins I have compiled from across the net and other
 * 	resources to create a mixin library*
 * 
 */

// Import the needed functions for the mixin support
@import "_functions";

// The default prefixes
$default-prefixes: ("-webkit-","-moz-", "-o-", "-ms-", "");

// Add vender prefixes to the property
@mixin prefix($property, $value, $prefixes: $default-prefixes) {
    @each $prefix in $prefixes {
        #{$prefix}#{$property}: #{$value};
    }
}

// Using the @content for developing the styles to avoid the bloat
@mixin activeFocus {
    &:active, &:focus {
        @content;
    }
}

// Add the hover effect to an element
@mixin hover {
	&:hover {
		@content;
	}
}

// CSS3 Compatible
@mixin emboss-box($shadowOpacity, $insetOpacity) {
    box-shadow: white($shadowOpacity) 0 1px 0, inset black($insetOpacity) 0 1px 0;
}

// List of the Modernizr classes
$ClassList: (
    "applicationcache", "audio ", "backgroundsize", "borderimage", "borderradius", "boxshadow", "canvas",
    "canvastext", "cssanimations", "csscolumns", "cssgradients", "cssreflections", "csstransforms", "csstransforms3d",
    "csstransitions", "draganddrop", "flexbox", "fontface", "generatedcontent", "geolocation", "hashchange", "history",
    "hsla", "indexeddb", "inlinesvg", "js", "localstorage", "multiplebgs", "opacity", "postmessage", "rgba", "sessionstorage",
    "smil", "svg", "svgclippaths", "textshadow", "touch", "video", "webgl", "websockets", "websqldatabase", "webworkers"
);

// The mixin to generate the class pair if the
// class is a Modernzer feature class
@mixin ModClass($class)
{
    @each $mclass in $ClassList {
      .#{$class}
      {
        @content;
      }
      @if $mclass == $class {
            .no-#{$class}
            {
              @content;
            }
        }
    }
}


// Micro clear fix
@mixin ClearFix()
{
  &:before,
  &:after
  {
    content: "";
    display: table;
  }

  &:after
  {
    clear: both;
  }
}

// Opacity property for class, id, or element
@mixin Opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

// Absolute position the class, id, or element
@mixin abs ($top: auto, $right: auto, $bottom: auto, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}

// Style links
@mixin Link($color, $text-dec: underline) {
  color: $color;
  text-decoration: none;

  &:hover,
  &:active,
  &:focus
  {
    color: lighten($color, 20%);
    text-decoration: $text-dec;
  }
}

// Retina display
@mixin imgRetina2x($image, $extension, $width, $height) {
  background: url($image + '.' + $extension) no-repeat;
  width: $width;
  height: $height;

  @media (min--moz-device-pixel-ratio: 1.3),
  (-o-min-device-pixel-ratio: 2.6/2),
  (-webkit-min-device-pixel-ratio: 1.3),
  (min-device-pixel-ratio: 1.3),
  (min-resolution: 1.3dppx) {
    background: url($image + '-2x' + '.' + $extension) no-repeat;
    background-size: $width $height;
  }
}

